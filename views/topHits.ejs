<style>
  body {
    background-color: #4e4e4e;
  }

  .songContainer {

    margin: 2%;
    margin-top:20px;
    padding-left: 5%;
    padding-right: 10%;
    display: flex;
    flex-direction: column;
    background-color: #272727;
    color: aliceblue;
    border-width: 2px;
    max-height: 150px;
    height: fit-content;
    justify-content: space-between;
    align-items: center;
    font-family: Arial, Helvetica, sans-serif;
    font-size: large;
    border-radius: 10px;
    transition: 0.4s;
    font-weight: 800;
    box-shadow: 0 1px 10px #000;
   
  }

  #songName {
    background-color: rgb(200, 200, 200);
    border-radius: 4px;
    border-style: solid;
  }

  .songContainer:hover {
    font-weight: 700;

    transition: 0.4s;
    margin: -2%;
    margin-top:20px;
    padding-left: 5%;
    padding-right: 10%;
    display: flex;
    flex-direction: column;
    border-style: double;
    border-color: #7fffd4;
    background-color: rgb(41, 41, 41);
    color: aliceblue;
    border-width: 2px;
    justify-content: space-between;
    align-items: center;
    font-family: Arial, Helvetica, sans-serif;
    font-size: large;
    border-radius: 10px;
    height: max-content;
  }
  .songContainer:hover  p , .songContainer:hover{
    overflow: visible!important;
    max-height: 400px!important;
  }

  .likeButton {
    transition: 0.2s;
    color: white
  }
  .triangle {
   width: 0px;
   height: 0px;
   border-style: solid;
   border-width: 0 10px 20px 10px;
   border-color: transparent transparent #FF4532 transparent;
   transform: rotate(90deg);
   margin-left: 10px;
}
.triangle:hover {
   width: 0px;
   height: 0px;
   border-style: solid;
   border-width: 0 10px 20px 10px;
   border-color: transparent transparent white transparent!important;
   transform: rotate(90deg);
   margin-left: 10px;
   transition: 0.2s;
}
  #submitquerybtn,
  #reversefilterbtn[data-pressed="1"] {
    background: chartreuse;
    color: black;
    border: none;
    border-radius: 4px;
    /* width: 30%; */
    /* height: 3%; */
    /* margin: 10px; */
    box-shadow: -5px 5px 1px green;
  }

  #submitquerybtn:hover,
  #reversefilterbtn[data-pressed="-1"] {
    position: relative;
    background: chartreuse;
    color: black;
    border: none;
    right: 3px;
    top: 3px;
    border-radius: 4px;
    /* width: 30%; */
    box-shadow: -2px 2px 1px green;
  }

  #reversefilterbtn {
    background-color: aqua;
  }

  .likeButton:hover {
    transition: 0.05s;
    cursor: pointer;
    color: #7fffd4
  }
  .likeButton[data-liked="true"] > svg{
    transition: 0.05s;
    cursor: pointer;
    fill: #7fffd4
  }

  .likeButton:hover svg {
    fill: #7fffd4;
    transition: 0.3s;

  }

  svg {
    transition: 0.3s;
  }
  .addToPlaylist{
    color: white;
  }
 

  .addToPlaylist:hover{
    fill: #7fffd4;

  }
  .subCont{
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-basis: fit-content;
    
  }
  
  /* .focused{
    background-color: #7fffd4;
    transition: 0.3s;
  } */
  .submitplaylistbtn{
    color: rgb(255, 255, 255);
    background-color:  #272727;
    width: 50%;
    border: 2px solid black;
    

  }
  .newinputbox{
    transition: 0.3s;
  }
</style>


<head>
 
</head>
<body style='max-width:400px;margin-left: 10%;margin-top: 8%;'>
  <datalist id="savedLists">
    <%for(i of playlists){%>

      <option value=<%-i.name%>></option>
    <%}%>
    </datalist>

  <div style='position: absolute; color:white;
    width: 100%;
    height: 60px;
    background: #272727;
    border-color: #7fffd4;
    border-width: 2px;
    border-style: double;
    top: 0px;right:0px' id="filtersHeader">
    <form id="submissionform" action="/getSongs">
      <label for="filterby">Filter by:</label>
      <select name="filterby" id="filterby">
        <option value="likes">Likes</option>
        <option value="date">Discovery Date</option>
        <option value="name">Name</option>
      </select>

      <label for="radiosource">Source</label>
      <select name="radiosource" id="radiosource">
        <option value="any">Any Radio</option>
        <option value="curr">Current Radio</option>
      </select>
      <button id="reversefilterbtn" onclick="document.querySelector('#reversefilterbtn').dataset.pressed*=-1"
        type="button" data-pressed="1">Reverse filter order</button>
        <input id="songsearch">
      <input type="submit" id="submitquerybtn" value="Submit"></input>
    </form>
  </div>

  <div id="allSongs"></div>
  <hr style="margin-bottom: 20%;visibility: hidden;">
  <script>
  
    let audio=0;
    function playSound(soundSrc) {
      if(audio){
      
        audio.load()
      }
      audio = new Audio(soundSrc);
      audio.play();

      setTimeout(function () {
        
        audio.pause();
        audio.currentTime = 0;
        audio = null; // Removing the reference to the audio element for garbage collection
      }, 10000); // Destroy after 10 seconds
    }
     async function likeSong(e) {
      song=JSON.parse(e.dataset.song)
      console.log(song)
      let likecounter = e.querySelector("p")

      if(e.dataset.liked=="false"){

      likecounter.innerText = parseInt(likecounter.innerText) + 1

      await fetch("/likeSong", { method: "POST", body: (song.id)})
      song.liked=true
      e.dataset.liked="true"

      }else{

        likecounter.innerText = parseInt(likecounter.innerText) - 1
              await fetch("/unlikeSong", { method: "POST", body: (song.id)})

        song.liked=false
        e.dataset.liked="false"

      }



    }
    method= "<%-mode%>"
    console.log(method)
    switch(method){
      case "likedOnly":
        method="/getLikedSongs"
        break;
      case "all":
        method="/getSongs"
        break;
      case "playlist":
        method='/getSongs?playlistId="<%-playlistId%>"'

    }
    let monitor;
    userId=<%-JSON.stringify(user)%>
    console.log(userId.id)
    function performSongQuery() {
      let formdataobject = Object.fromEntries(new FormData(document.getElementById("submissionform")))
      formdataobject.reversefilterbtn = document.querySelector('#reversefilterbtn').dataset.pressed
      fetch(method, { method: "POST", body: JSON.stringify(formdataobject) })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json(); // Assuming the response is in JSON format
        })
        .then((data) => {
          console.log(data)
          // Use the data here
          songs = data;

          for (i of songs) {
            let valsearch=document.querySelector("#songsearch").value
            if(valsearch.length==0 || i.name.toUpperCase().includes(valsearch.toUpperCase())){
            console.log(i.sampleId)
                      const data = {
                        search_query: i.name+"-"+i.artist,
          };
          // console.log(<%-user%>)
            
            query='https://www.youtube.com/results?'+new URLSearchParams(data)
            let clr="red"
            if(i.youtubeId&& i.youtubeId.length>0){
              
            query=i.youtubeId
              clr="purple"
            }

            songCont = document.createElement("div")
            songCont.dataset.query=query
            songCont.classList.add("songContainer")
            songCont.dataset.songId=i.id
        
          

            songCont.innerHTML = `<div class="subCont"><p class="displayData" style="max-width:16ch;max-height:100px;overflow:clip; margin-right:40px;">${i.name + " - " + i.artist}</p>
      <div onclick='likeSong(this);' class="likeButton" data-liked=${i.likes.includes(userId.id)} style="display:flex;flex-direction:row;align-items: baseline;">
      <p>${i.likes.length}</p>
        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><style>svg{fill:#ffffff}</style><path d="M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z"/></svg>

        </div>
        <svg class="addToPlaylist" style="margin:5px; " viewBox="40 40 512 512" xmlns="http://www.w3.org/2000/svg">
  <rect width="208" height="32" x="256" y="152" fill="var(--ci-primary-color, #255255255)" class="ci-primary"/>
  <rect width="288" height="32" x="176" y="256" fill="var(--ci-primary-color, #255255255)" class="ci-primary"/>
  <rect width="288" height="32" x="176" y="360" fill="var(--ci-primary-color, #255255255)" class="ci-primary"/>
  <polygon fill="var(--ci-primary-color, gray)" points="192 152 128 152 128 88 96 88 96 152 32 152 32 184 96 184 96 248 128 248 128 184 192 184 192 152" class="ci-primary"/>
</svg>`+
        (clr=="purple"?(`<div class="triangle"> </div><br>`):
        (`<a href="${query}" class="triangle" target="_parent"></a>`))+
   `
  </div>
      `
      nextSong=0
      if(clr=="purple"){
        // songCont.querySelector(".triangle").style.fill="purple"
songCont.querySelector(".triangle").style.borderBottomColor = "purple";
        songCont.querySelector(".triangle").addEventListener("click",(e)=>{
          nextSong = e.target.parentElement.parentElement.nextSibling

          console.log("/streamAudio?url="+query)
          const audioEl= window.top[1].document.querySelector("#audioElement")
         audioEl.src="/streamAudio?url="+e.target.parentElement.parentElement.dataset.query
         window.top[1].document.querySelector("#songDiscoverBtn").remove()
      
       
        
      })
      playlists=(<%-JSON.stringify(playlists)%>)
      //func stolen from stackoverflow
      function is_valid_datalist_value(idDataList, inputValue) {
  var option = document.querySelector("#" + idDataList + " option[value='" + inputValue + "']");
  if (option != null) {
    return option.value.length > 0;
  }
  return false;
}
audioEl=window.top[1].document.querySelector("#audioElement")
audioEl.addEventListener("loadeddata",(em)=>{
          monitor=setInterval(()=>{
          if(audioEl.currentTime>audioEl.duration-2){
            nextSong=nextSong.nextSibling
            audioEl.src="/streamAudio?url="+nextSong.dataset.query
            clearInterval(monitor)
            monitor=null
            
          }
         },400)
       
        })

      songCont.querySelector(".addToPlaylist").style.width="40px"
      songCont.querySelector(".addToPlaylist").style.minWidth="40px"

      songCont.querySelector(".addToPlaylist").style.heigth="40px"
      songCont.addEventListener("mouseup", (event) => {
          
          if(event.button==0 && event.target.classList.contains("displayData")){
           location.href="listenTo?songid="+event.target.parentElement.parentElement.dataset.songId
          }
           if(event.button==2){
             let menu=document.querySelector("#context-menu")
           if(menu) menu.remove()
             event.preventDefault();
             
                 let contextMenu = document.createElement("div");
                 contextMenu.id="context-menu"
                 contextMenu.innerHTML = "<button>Share</button>";
                 contextMenu.style.position = "fixed";
                 contextMenu.style.top = event.clientY + "px";
                 contextMenu.style.left = event.clientX + "px";
                 contextMenu.querySelector("button").addEventListener("click",(e)=>{
                   console.log(event.target.parentElement.parentElement)
                   window.open("listenTo?songid="+event.target.parentElement.parentElement.dataset.songId)
                 })
                 document.body.append( contextMenu);
           
             return false;  // Add this line
           }
         },false);
              songCont.querySelector(".addToPlaylist").addEventListener("click",(e)=>{
                if(document.querySelector(".divctn")){
                  console.log("e")
                  document.querySelector(".divctn").remove()
                }

                newPlaylistinputbox=document.createElement("input")
                newPlaylistinputbox.classList.add("newinputbox")
                newPlaylistinputbox.placeholder="Enter playlist name"
                submitbtn=document.createElement("button")
                submitbtn.innerHTML="Add to list"
                submitbtn.classList.add("submitplaylistbtn")
                newPlaylistinputbox.addEventListener("input",async(e)=>{

                    console.log(e.target.value)
                    if(!is_valid_datalist_value("savedLists",e.target.value)){
                      e.target.style.backgroundColor="yellow"
                    }else{
                      e.target.style.backgroundColor="#21ed58"

                    }
                  })
                submitbtn.addEventListener("click",async (e)=>{
                  if(newPlaylistinputbox.value.length>0){
                  res = await fetch("/addToPlaylist",{method:"POST",body:JSON.stringify({songId:e.target.parentElement.parentElement.dataset.songId, playlistName:newPlaylistinputbox.value})})
                  e.target.innerHTML="Successfully added"
                  e.target.style.color="greenyellow"
                  e
                  console.log(e.target.parentElement.dataset.songId)
                  }
                })
                
                newPlaylistinputbox.setAttribute("list","savedLists")
                label = document.createElement("label")
               
                // label.
                divctn=e.target.parentElement.parentElement.querySelector(".divctn")
              
                if(divctn==null){                
                  divctn = document.createElement("div")
                  e.target.parentElement.parentElement.appendChild(divctn)
                }
                
                divctn.classList.add("divctn")
                divctn.style.display="flex"
                divctn.style.justifyContent="center"
                divctn.innerHTML=""

                divctn.appendChild(newPlaylistinputbox)
                divctn.appendChild(submitbtn) 
                e.target.addEventListener("focusout",(ev)=>{
                  divctn.parentElement.querySelector(".newinputbox").remove()
                  
                })
               
                console.log( e.target.parentElement)
              }) 
              songCont.querySelector(".likeButton").dataset.song=JSON.stringify(i)
            document.body.querySelector("#allSongs").appendChild(songCont)
              
          }}
        }
        
        }
        )
    }
    performSongQuery()
    songsearch.addEventListener("input",(e)=>{
      console.log(document.querySelectorAll(".songContainer").forEach((e) => {
        e.remove()
      }))
      performSongQuery()
    })
    document.querySelectorAll('.songContainer').forEach(e => console.log(e));
    document.querySelector('#submitquerybtn').addEventListener('click', function (event) {
      console.log("whoop")
      event.preventDefault(); // Prevent the default form submission
      // document.write("");
      console.log(document.querySelectorAll(".songContainer").forEach((e) => {
        e.remove()
      }))

      performSongQuery()
// 
    });


  </script>
</body>