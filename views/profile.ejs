<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #4e4e4e;
        }

        #profileCnt {
            background-color: rgb(45, 40, 45);
            color: white;
            width: 70%;
            display: flex;
            flex-direction: column;
            border-radius: 10px;
            justify-content: flex-start;
            align-items: center;
        }

        #userBio {
            text-align: center;
            max-width: 80%;
        }

        input {
            opacity: 0.4;
            margin: 3px;
            width: 75%
        }

        #wall {
            width: 100%;
            display: flex;
            flex-direction: row;
            background-color: #332f34;

        }

        #pfpSmall {
            margin: 10px;
            border-radius: 50%;
        }

        button {
            background: chartreuse;
            color: black;
            border: none;
            border-radius: 4px;
            width: fit-content;
            height: 3%;
            /* margin: 10px; */
            box-shadow: -5px 5px 1px green;
        }
        #threads{
            display: flex;
            flex-direction: column;
        }
    </style>
</head>

<body>
    <div id="profileCnt">

        <img id="profilePic">
        <h1 id="username"><%-user.username%></h1>
        <img style='max-width:200px' id="pfpBig" src="/<%-user.id%>/pfp.png"
            onclick="document.getElementById('profilePicInput').click();">
        <% if (user.username === selfUser.username) { %>
        <input type="file" id="profilePicInput" style="display: none" onchange="handleFileSelect(event)">
        <% } %>
        <hr style="width:120px">
        <h2 id="userBio"><%-user.bio?user.bio:"User doesn't have a bio yet, but it would sit here if it was here!"%>
        </h2>
        <span style="display: inline-flex;align-items: center;">
            <button id="followBtn">Befriend</button>
            <p>9999 friends</p>
        </span>
        <p id="dataPar"></p>
        <div id="wall">
            <img width="50px" height="50px" id="pfpSmall" src="/<%-selfUser.id%>/pfp.png">
            <input id="newThread" onkeydown="handleKeyPress(event)">
     
        </div>
        <div id="threads"> 
            <% threads.forEach(thread => { %>
            <div class="thread">
                <img width="50px" height="50px" class="pfpSmall" src="/<%- thread.postedBy %>/pfp.png">
                <div class="threadContent">
                    <p><%- thread.content %></p>
                    <p>Posted by: <%- thread.postedBy %></p>
                </div>
            </div>
            <% }); %>
        </div>
    </div>
    <script>
        console.log(<%-JSON.stringify(threads)%>)
        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                // Get the message from the input field
                const message = document.getElementById('newThread').value.trim();

                // Check if the message is not empty
                if (message) {
                    // Send a POST request to the /thread route
                    fetch('/thread', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            username: '<%= selfUser.id %>', // Assuming this is the correct way to get the user ID
                            content: message,
                        }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            // Handle the response if needed
                            console.log(data);
                        })
                        .catch(error => {
                            // Handle errors if any
                            console.error('Error:', error);
                        });

                    // Clear the input field
                    document.getElementById('newThread').value = '';
                }
            }
        }

        async function handleFileSelect(event) {
            const fileInput = event.target;
            const file = fileInput.files[0];
            console.log('hi')
            if (file) {
                const formData = new FormData();
                formData.append('file', file);

                res = await fetch('/uploadPFP', {
                    method: 'POST',
                    body: formData
                })
                await console.log(res.json())

                    .catch(error => {
                        console.error('Error uploading file:', error);
                        // Handle error or update UI as needed
                    });
            }
        }
    </script>

</body>

</html>