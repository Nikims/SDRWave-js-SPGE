<!doctype html>
<html lang="en" style="height: 100%">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chatbox</title>
  <style>
    body {
      overflow: hidden;
      height: 100%;
      display: flex;
      flex-direction: column;
    }
    #chatbox {
      height: 100px;
      overflow-y: scroll;
      border: 1px solid #ccc;
      padding: 10px;
      width: 100%;
    }
    input, select {
      width: 100%;
      padding: 6px 12px;
      background: rgb(31, 32, 35);
      border: 1px solid rgb(60, 63, 68);
      border-radius: 4px;
      font-size: 13px;
      color: rgb(247, 248, 248);
      height: 46px;
      appearance: none;
      transition: border 0.15s ease 0s;
    }
    input:focus {
      outline: none;
      box-shadow: none;
      border-color: rgb(100, 153, 255);
    }
    #messageinput-cnt {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      max-height: max-content;
      height: 20%;
    }
    #chatbox>div {
      font-weight: 500;
      color: white;
    }
  </style>
</head>
<body style="margin: 0; width: 93%;">
  <form>
    <label style="color: #ccc;" for="chatsrc">I wanna chat with</label>
    <select name="chatsrc" id="chatsrc">
      <option value="current">Current station listeners</option>
      <option value="friends">a friend</option>
      
    </select>
    <div id="friendSelector" style="display: none;">
      <label style="color: #ccc;" for="friend">called:</label>
      <select name="friend" id="friendSelectorChild">
        <% friends.forEach(function(friend) { %>
          <script>
            console.log(`<%-JSON.stringify(friend)%>`)
          </script>
          <option value="<%= friendUsernames[friends.indexOf(i)] %>"><%= friendUsernames[friends.indexOf(i)] %></option>        <% }); %>
      </select>
    
    </div>
  </form>
  <div id="chatbox"></div>
  <div id="messageinput-cnt">
    <button onclick="sendMessage()" hidden></button>
    <div>
      <input autocomplete="off" type="text" id="messageInput" placeholder="Type your message here">
    </div>
  </div>
  <script>
    document.querySelector("#chatsrc").addEventListener("change", e => {
      const friendSelectorDisplay = document.querySelector("#friendSelector");
      if(e.target.value == "friends"){
        friendSelectorDisplay.style.display = "block";
        if(friendSelectorDisplay.querySelectorAll("select").length == 0){
          location.reload();
        }
      } else {
        friendSelectorDisplay.style.display = "none";
      }
      loadMessages();
    });

    document.getElementById("messageInput").addEventListener("keypress", function(event) {
      if(event.key === "Enter") {
        event.preventDefault();
        document.querySelector("#chatbox").scrollTop += 30;
        sendMessage();
      }
    });

    function loadMessages() {
      const srcval = document.querySelector("#chatsrc").value;
      const endpoint = `/chatMessages?source=${srcval == "current" ? srcval : srcval + "&friendId=" + document.querySelector("#friendSelectorChild").value}`;
      
      fetch(endpoint)
        .then(response => response.json())
        .then(data => {
          const chatbox = document.getElementById("chatbox");
          chatbox.innerHTML = "";
          data.chatMessages.slice().reverse().forEach(message => {
            const messageDiv = document.createElement("div");
            messageDiv.style.display = "flex";
            messageDiv.style.flexDirection = "column";
            
            const submsg = document.createElement("div");
            const usrname = document.createElement("span");
            usrname.innerText = srcval == "current" ? message.senderUsername : message.user1 != "<%-myId%>" ? document.querySelector("#friendSelectorChild").value : "me";
            usrname.dataset.username = usrname.innerText;
            submsg.appendChild(usrname);

            const content = document.createElement("span");
            content.innerText = ": " + message.messageContent;
            submsg.appendChild(content);
            messageDiv.appendChild(submsg);

            const hrElement = document.createElement("hr");
            hrElement.style.opacity = "10%";
            hrElement.style.width = "90%";
            hrElement.style.justifySelf = "flex-start";
            messageDiv.appendChild(hrElement);
            
            usrname.addEventListener("click", e => {
              parent.parent.document.querySelector("#stations").src = "/user?" + "username=" + e.target.dataset.username;
            });

            chatbox.appendChild(messageDiv);
          });
        })
        .catch(error => console.error("Error:", error));
    }

    function sendMessage() {
      const content = messageInput.value;
      if(!content) return;
      
      fetch("/chatMessage", {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({content, source: document.querySelector("#chatsrc").value, sendTo: document.querySelector("#friendSelectorChild").value}),
      })
      .then(response => response.json())
      .then(data => {
        loadMessages();
        messageInput.value = "";
      })
      .catch(error => console.error("Error:", error));
    }

    document.addEventListener("DOMContentLoaded", function() {
      loadMessages();
      setInterval(loadMessages, 5000);
    });
  </script>
</body>
</html>
